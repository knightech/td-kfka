### Success 200 (Comedy genre)

GET http://localhost:8080/title-discovery/titles-stub?genre=Comedy
Accept: application/json
Cache-Control: no-cache

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Success 200 (BollyWood genre)

GET http://localhost:8080/title-discovery/titles-stub?genre=BollyWood
Accept: application/json
Cache-Control: no-cache

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Success 200 (Action genre)

GET http://localhost:8080/title-discovery/titles-stub?genre=Action
Accept: application/json
Cache-Control: no-cache

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Fail 406 Not Acceptable (wrong accept header)

GET http://localhost:8080/title-discovery/titles-stub?genre=Comedy
Accept: application/xml
Cache-Control: no-cache

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 406, "Response status is not 406");
});
%}

### Fail 400 Bad Request (no genre query parameter present)
GET http://localhost:8080/title-discovery/titles-stub
Accept: application/json
Cache-Control: no-cache

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});
%}

###
